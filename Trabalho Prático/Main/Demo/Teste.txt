load 'question.qst' as f1;
load 'popup.qst' as p;

//Teste linear

Quiz Teste(partcipant, score) {
   
	Options (
		giveUp : "desistir";
        part1: "parte1";
        part2: "parte2";
		nextQuestion : "proximo";
		prevQuestion : "anterior";
		prevToAnswer : "anteriorN";
        nextToAnswer : "proximoN";
        confirm : "confirmar";
	);
     
    //60% para parte1
    //4 perguntas sobre historia de portugal
    //25% cada pergunta
    Section parte1 (
        from f1:
        P1,
        P2:[a,b,c],
        P4,
        P5;
    );

    //40% para parte2
    //2 perguntas sobre gramatica
    //50% cada pergunta
    Section parte2 (
        from f1: P7,P8:[a,d];
    );
}

Quiz Popup(participant, score) {

    Section pop(
        from p: P1;
    );
}




main {
    String participant;
    print "Nome: ";
    //ler participante do input
    read participant;
    
    //score maximo de 100
    int score;
    score = 100;
    
    //inicar um novo teste
    Quiz t;
    t = Teste(participant, score);
    
    //iniciar um novo Popup
    Quiz pop;
    pop = Popup(participant, 0);
    
    //comecar na primeira parte pergunta P1
    goto t.parte1;
    goto t.parte1.f1_P1;
    
    //na parte2 ir para a pergunta P7
    goto t.parte2.f1_P7;
    
    //inicializar popup
    goto pop.pop;
    goto pop.pop.p_P1;
    
    //flag para o resultado 
    double popRes;
    popRes = 0;

    double p1Size;
    p1Size = sizeof t.parte1;
    
    clear;

    //imprimir pergunta atual
    show t.current.current;
    
    //imprimir as opções para o usuario 
    print "-------------------Opções----------------------\n";
    print "desistir   - para desistir\n";
    print "parte1     - para avançar para ir para a parte 1\n";
    print "parte2     - para avançar para ir para a parte 2\n";
    print "proximo    - para avançar para a proxima pergunta\n";
    print "proximoN   - para avançar para a proxima pergunta por responder\n";
    print "anterior   - para voltar para a pergunta anterior\n";
    print "anteriorN  - para voltar para a pergunta anterior por responder\n";
    print "confirmar  - para acabar o teste\n";
    print t;
     
    //flag confirmacao
    boolean confirmation;
    confirmation = false;
    
    //flag desistencia
    boolean giveUp;
    giveUp = false;

    while(confirmation == false && giveUp == false) {

        answer(t.current.current) {
           
            //avancar para a proxima pergunta
            case(nextQuestion):
				next t.current;
                clear;
                 
            //avancar para a pergunta anterior
            case(prevQuestion):
                prev t.current;
                clear;
             
            //avancar para a proxima pergunta por responder
            case(nextToAnswer):
				nextUnanswered t.current;
                clear;
                 

            //avancar para a proxima pergunta por responder
            case(prevToAnswer):
                prevUnanswered t.current;
                clear;

            case(confirm):
                confirmation = true;
            
            case(part1):
                goto t.parte1;
                clear;
            
            case(part2):
                goto t.parte2;
                clear;

             case(giveUp):
                //mostrar popup
                clear;
                show pop.current.current;
                answer(pop.current.current) {
                    valid:
                        popRes = result pop.current.current;
                        if(popRes == 1) {
                            giveUp = true;
                        }
                }
                clear;
                
             valid:
                nextUnanswered t.current;
                clear;
             
             invalid:
                clear;

        }
        //mostrar a pergunta atual 
        show t.current.current;
        //mostrar a resposta a selecionada
        print "Selecionada: " + selected t.current.current;

        //imprimir as opções para o usuario 
        print "---------Digite---------\n";
        print "desistir   - para desistir\n";
        print "parte1     - para para ir para a parte 1\n";
        print "parte2     - para para ir para a parte 2\n";
        print "proximo    - para avançar para a proxima pergunta\n";
        print "proximoN   - para avançar para a proxima pergunta por responder\n";
        print "anterior   - para voltar para a pergunta anterior\n";
        print "anteriorN  - para voltar para a pergunta anterior por responder\n";
        print "confirmar - para acabar o teste\n";
        
        //imprimir estado atual do teste
        print t;
     }

    clear;

    //verficar desistencia
    if(giveUp == true) {
        print "Resultado: 0\n" ;
    }
    //calcular resultado
    else {
        
        double finalResult;
        
        //ir buscar o resultado tendo em conta as percentagens atribuidas
        finalResult = result t;
        
        if(finalResult < 50) {
            print "Reprovado ! \n";
        }
        else {
            print "Aprovado ! \n";
        }

        //mostrar informacao dos resultados
        
        print "Resultado parte 1: " + result t.parte1 + "\n";
        print "Valor parte 1: " + value t.parte1 + "\n";
        print "Resultado pergunta 1: " + result t.parte1.f1_P1 + "\n";
        print "Resultado pergunta 2: " + result t.parte1.f1_P2 + "\n";
        print "Resultado pergunta 4: " + result t.parte1.f1_P4 + "\n";
        print "Resultado pergunta 5: " + result t.parte1.f1_P5 + "\n";

        print "\nResultado parte 2: " + result t.parte2 + "\n"; 
        print "Valor parte 2: " + value t.parte2 + "\n";
        print "Resultado pergunta P7: " + result t.parte2.f1_P7 + "\n";
        print "Resultado pergunta P8: " + result t.parte2.f1_P8 + "\n";
        print "\nResultado final : " + finalResult + "\n";
    }
}
